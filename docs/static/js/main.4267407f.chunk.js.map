{"version":3,"sources":["helpers/GetGif.js","components/GifGridItem.js","components/BreakingBad.js","hooks/useCounter.js","hooks/useFetch.js","hooks/useFetchGifs.js","PrincipalComponent.js","index.js"],"names":["getGif","category","a","url","encodeURI","fetch","resp","json","data","console","log","gif","title","Math","floor","random","id","images","downsized_medium","GifGridItem","className","src","alt","BreakingBad","initialState","useState","state","setstate","increment","decrement","reset","useCounter","valor","isMounted","useRef","useEffect","current","loading","error","then","response","useFetch","author","quote","imgs","useFetchGifs","loadingGif","style","margin","marginRight","onClick","marginLeft","PrincipalComponent","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4267407f.chunk.js","sourcesContent":["export const getGif = async ( category ) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=20&api_key=W0hha8Na7gGudVP3nTcJULDLoh1Ehj7x`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n    const random = 15;\n\n    console.log('se monto el componente GifGrid');\n    \n    const gif = {\n        title: data[Math.floor(Math.random() * random)].title,\n        id: data[Math.floor(Math.random() * random)].id,\n        url: data[Math.floor(Math.random() * random)].images.downsized_medium.url\n    }\n    return gif;\n};","import React from 'react'\n\nexport const GifGridItem = ( {title, url} ) => {\n\n    console.log('se monto el componente GifGridItem');\n    \n    console.log(url);\n\n    return (\n        <div className='card'>\n            <img src={url} alt={title}></img>\n        </div>\n    )\n}\n\nexport default GifGridItem;","import React, { useEffect } from 'react';\nimport { useCounter } from '../hooks/useCounter';\nimport { useFetch } from '../hooks/useFetch';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport '../index.css';\nimport GifGridItem from './GifGridItem';\n\nexport const BreakingBad = () => {\n\n    console.log('se monto el componente BreakingBad');\n\n    const { state:valor, increment, decrement, reset } = useCounter(1);\n\n    const { loading, data } = useFetch(`https://www.breakingbadapi.com/api/quotes/${valor}`);\n\n    const { author, quote } = !!data && data.data[0];\n\n    const {data: images, loading: loadingGif} = useFetchGifs(author);\n\n    return (\n        <>\n            {\n                loadingGif ?\n                    (<div className=\"alert alert-info text-center\" style={{margin: '3em'}}>\n                        Loading...\n                    </div>)\n                    :\n                    (<><div className=\"divFrases\">\n                        <blockquote className=\"blockquote\">\n                            <p className=\"mb-0\">{quote}</p>\n                            <footer className=\"blockquote-footer\">{author}</footer>\n                        </blockquote>\n                    </div>\n                    <GifGridItem {...images}/>\n\n                    <div className='buttons'>\n                        <button className=\"btn btn-primary\" style={{marginRight: '15px'}} onClick= {() => increment(1)}>Siguiente frase</button>\n                        {\n                            valor > 1 && (<button className=\"btn btn-primary\" onClick= {() => decrement(1)}>Frase anterior</button>)\n                        }\n                         <button className=\"btn btn-primary\" style={{marginLeft: '15px'}} onClick= {() => reset()}>Volver a empezar</button>\n                    </div>\n                    </>\n                    )\n            }\n        </>\n    )\n}\n","import { useState } from \"react\"\n\nexport const useCounter = (initialState = 10) => {\n    \n    console.log('se monto el custom hook useCounter');\n\n    const [state, setstate] = useState(initialState);\n\n    const increment = (factor = 1) => {\n        setstate(state + factor);\n    }\n\n    const decrement = (factor = 1) => {\n        setstate(state - factor);\n    }\n\n    const reset = () => {\n        setstate( initialState);\n    }\n\n    return {\n        state,\n        increment,\n        decrement,\n        reset\n    };\n}","import { useEffect, useRef, useState } from \"react\"\n\nexport const useFetch = ( url ) => {\n    \n    const isMounted = useRef();\n\n    console.log('se monto el custom hook useFetch');\n\n    useEffect(() => {\n        return () => {\n            isMounted.current = false;\n        }\n    }, [])\n\n    const [state, setstate] = useState({data: null, loading: true, error: null});\n\n    useEffect(() => {\n        if (isMounted.current) {\n            setstate({\n                data: null,\n                loading: true,\n                error: null\n            });\n        }\n        fetch(url)\n        .then(response => response.json())\n        .then(data => setstate({\n            loading: false,\n            error: null,\n            data: {data}\n        }));\n    }, [url])\n\n    return state;\n\n}","import { useEffect, useState } from \"react\"\nimport { getGif } from \"../helpers/GetGif\";\n\n\nexport const useFetchGifs = ( category = 'Breaking Bad' ) =>{\n    \n    console.log('se monto el componente useFetchGif');\n\n    const [state, setstate] = useState({\n        data: null,\n        loading: true\n    });\n\n    useEffect(()=>{\n        getGif( category ).then(imgs =>{\n            setstate({\n                data: imgs,\n                loading: false\n            });\n        });\n    }, [category]);\n\n    return state; //{data: [], loading: true}\n}","import React from 'react'\nimport { BreakingBad } from './components/BreakingBad'\n\nexport const PrincipalComponent = () => {\n    return (\n        <>\n            <h1>BreakingBad Quotes</h1>\n            <hr/>\n            <BreakingBad/>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { PrincipalComponent } from './PrincipalComponent';\n\nReactDOM.render(\n  <PrincipalComponent />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}